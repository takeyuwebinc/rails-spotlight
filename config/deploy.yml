# Name of your application. Used to uniquely configure containers.
service: takeyuwebinc-spotlight-rails

# Name of the container image.
image: takeyuweb/takeyuwebinc-spotlight-rails

# Deploy to these servers.
servers:
  web:
    - www-takeyuweb-co-jp

# Enable SSL auto certification via Let's Encrypt (and allow for multiple apps on one server).
# If using something like Cloudflare, it is recommended to set encryption mode 
# in Cloudflare's SSL/TLS setting to "Full" to enable end-to-end encryption. 
proxy: 
  ssl: true
  host: takeyuweb.co.jp

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  server: takeyuwebinc-spotlight-rails.sakuracr.jp
  username: deploy

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD
# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY
env:
  clear:
    TZ: "Asia/Tokyo"
  secret:
    - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#  user: ubuntu

# Configure builder setup.
builder:
  arch: amd64

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# kamalに作成を任せると root になり書き込みできないので、先に作成して Dockerfile で指定した uid / gid にしておく
# mkdir -p /srv/kamal/takeyuwebinc-spotlight-rails-storage
# chown 1000:1000 /srv/kamal/takeyuwebinc-spotlight-rails-storage
volumes:
  - "/srv/kamal/takeyuwebinc-spotlight-rails-storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
